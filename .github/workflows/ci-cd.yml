name: CI - Test and Run Services

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

  
env:
  # Environment variables for OpenTelemetry/SigNoz Cloud
  # These will be available to all steps in the job.
  OTEL_RESOURCE_ATTRIBUTES: service.name=flask-app-backend-ci
  OTEL_EXPORTER_OTLP_ENDPOINT: https://ingest.in.signoz.cloud:443
  OTEL_EXPORTER_OTLP_HEADERS: "signoz-access-token=e9bfcba0-a5a1-4d45-b2d5-38d332625ac8"
  OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED: true
  
  # Environment variable for the React App to find the backend
  # This works because both servers will run on localhost on the self-hosted runner
  FRONTEND_APP_API_URL: http://localhost:3000
  BACKEND_APP_API_URL: http://localhost:5000

jobs:
  test-and-run:
    runs-on: self-hosted
    # Using your self-hosted runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: list
        run: ls
      # =========================================================
      # Backend Setup
      # =========================================================
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Ensure this version is installed on your runner

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/Flask-ToDo-List/requirements.txt
          opentelemetry-bootstrap --action=install # For auto-instrumentation

      # =========================================================
      # Frontend Setup
      # =========================================================
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Ensure Node v18+ is available on your runner

      - name: Install frontend dependencies
        working-directory: frontend/Simple-Todos-In-React-JS
        run: npm install

      - name: Make run scripts executable
        run: |
          chmod +x backend/Flask-ToDo-List/backend-run.sh
          chmod +x frontend/Simple-Todos-In-React-JS/frontend-run.sh
      # =========================================================
      # Run Services in the Background
      # =========================================================
      - name: Run Backend Service in Background
        run: ./backend/Flask-ToDo-List/backendrun.sh &

      - name: Run Frontend Service in Background
        run: ./frontend/Simple-Todos-In-React-JS/frontend-run.sh &
      # - name: Run Backend in Background
      #   working-directory: backend/Flask-ToDo-List
      #   # The '&' runs the command in the background
      #   run: opentelemetry-instrument python3 app.py &

      # - name: Run Frontend in Background
      #   working-directory: frontend/Simple-Todos-In-React-JS
      #   # The '&' runs the command in the background
      #   run: npm start &

      # =========================================================
      # Health Check / Integration Test
      # =========================================================
      - name: Wait for services to start
        # Give the servers time to initialize before testing them
        run: sleep 40

      - name: Test Backend Endpoint
        # --fail causes the step to fail if the HTTP status is an error (e.g., 404, 500)
        run: curl --fail http://localhost:5000/api/todos

      - name: Test Frontend Endpoint
        run: curl --fail http://localhost:3000
